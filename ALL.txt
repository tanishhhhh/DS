#Practicl 02 time series
rainfall <- c(100, 200, 300, 400, 500, 600, 70, 800, 900, 1000)
rainfall.timeseries <- ts(rainfall, start = c(2012, 1), frequency = 12)
print(rainfall.timeseries)

png(file = "rainfall.png")
plot(rainfall.timeseries, main = "Rainfall Time Series")
dev.off()

#Practical 03 time series frequency analysis
data("AirPassengers")
class(AirPassengers)
start(AirPassengers)
end(AirPassengers)
frequency(AirPassengers)
summary(AirPassengers)
plot(AirPassengers)
abline(reg = lm(AirPassengers ~ time(AirPassengers)))
cycle(AirPassengers)
boxplot(AirPassengers ~ cycle(AirPassengers)

data("cars")
class(cars)
head(cars)
tail(cars)
start(cars)
frequency(cars)
summary(cars)
plot(cars)
reg <- lm(dist  ~ speed, data = cars)
plot(cars)
plot(reg)


#Practical 04
> data("warpbreaks")
> head(warpbreaks)
> summary(warpbreaks)
> Model1 <-aov(breaks~wool+tension, data = warpbreaks)
> summary(Model1)
> plot(Model1)
> Model_2 <- aov(breaks~wool+tension+wool:tension, data=warpbreaks)
> summary(Model_2)
> plot(Model_2)


> data("PlantGrowth")
> head(PlantGrowth)
> summary(PlantGrowth)
> levels(PlantGrowth$group)
> weight=PlantGrowth$weight
> group=PlantGrowth$group
> mean(weight)
> mean(weight[group=="ctrl"])
> mean(weight[group=="trt1"])
> mean(weight[group=="trt2"])
> tapply(weight,group,mean)
> tapply(weight,group,length)
> aov(weight~group)



#Practical 05
height <- c(43,65,6,6,36,56,4356,43,7564,7,4764,75)
weight <- -c(43,5,6,6,36,465,65,7,65467,547,647,45)
student <- lm(weight~height)
print(student)
predict(student, data.frame(height = 199), interval = "confidence")

df <- datasets::cars
> my_lm <- lm(dist~speed, data=df)
> print(my_lm)
variable_speed <- data.frame(speed = c(11,12,432,354,4,56,54,6,56))
> linear_model <- lm(dist~speed, data=df)
> predict(linear_model, newdata= variable_speed)
predict(linear_model, newdata = variable_speed, interval="confidence")


#Practical 06
> x <- rnorm(100)
> y <- rnorm(100)
>  t.test(x, mu  =5)
> t.test(x, y)
> t.test(x, mu = 2, alternative = 'greater')


#Practical 07
install.packages("party")
library(party)

# Assuming readingSkills is your dataset
input.dat <- readingSkills[c(1:105),]

# Specify the output PNG file with width and height
png(file = "decision_tree.png", width = 800, height = 600)

# Fit the decision tree model
output.tree <- ctree(nativeSpeaker ~ age + ShoeSize + score, data = input.dat)

# Plot the decision tree
plot(output.tree)

# Close the PNG device
dev.off()



#Prcatical 08
input <- mtcars[, c("am", "cyl", "hp", "wt")]
am.data = glm(formula = am ~ cyl +hp +wt, data = input, family = binomial)
print(summary(am.data))
plot(am.data)



#Practical 09
install.packages("ggplot2")
library(ggplot2)
df <-iris
head(iris)
ggplot(df, aes(Petal.Length, Petal.Width)) +geom_point(aes(col =Species), size = 4)
set.seed(101)
irisCluster <-kmeans(df[,1:4],center=3,nstart=20)
irisCluster
install.packages("cluster")
library(cluster)
clusplot(iris,irisCluster$cluster,color=T,shade=T,labels=0,lines=0)





